
R version 4.2.0 (2022-04-22) -- "Vigorous Calisthenics"
Copyright (C) 2022 The R Foundation for Statistical Computing
Platform: x86_64-pc-linux-gnu (64-bit)

R is free software and comes with ABSOLUTELY NO WARRANTY.
You are welcome to redistribute it under certain conditions.
Type 'license()' or 'licence()' for distribution details.

  Natural language support but running in an English locale

R is a collaborative project with many contributors.
Type 'contributors()' for more information and
'citation()' on how to cite R or R packages in publications.

Type 'demo()' for some demos, 'help()' for on-line help, or
'help.start()' for an HTML browser interface to help.
Type 'q()' to quit R.

[Previously saved workspace restored]

> sketching <- readRDS("results/flood_results_sketching.RDS")
> subdomains <- readRDS("results/flood_results_subdomains.RDS")
> stratified <- readRDS("results/flood_results_stratified.RDS")
> data_split <- readRDS("results/data_split.RDS")
> indexTest <- data_split[[2]]
> load("data/flood_data.RData")
> trueTest <- out[1, indexTest]
> 
> # Parameter estimates
> sigma2 <- c(sketching$means['sigma2'], 
+ 	    subdomains$means['sigma2'],
+ 	    stratified$means['sigma2'])
> tau2 <- c(sketching$means['tau2'], 
+ 	  subdomains$means['tau2'],
+ 	  stratified$means['tau2'])
> beta <- c(sketching$means['beta7'], 
+ 	  subdomains$means['beta7'],
+ 	  stratified$means['beta7'])
> 
> # Lower bounds
> sigma2Lwr <- c(sketching$lower[1], 
+ 	       subdomains$lower[1],
+ 	       stratified$lower[1])
> tau2Lwr <- c(sketching$lower[2], 
+ 	     subdomains$lower[2],
+ 	     stratified$lower[2])
> betaLwr <- c(sketching$lower[9], 
+ 	     subdomains$lower[9],
+ 	     stratified$lower[9])
> 
> # Upper bounds
> sigma2Upr <- c(sketching$upper[1], 
+ 	       subdomains$upper[1],
+ 	       stratified$upper[1])
> tau2Upr <- c(sketching$upper[2], 
+ 	     subdomains$upper[2],
+ 	     stratified$upper[2])
> betaUpr <- c(sketching$upper[9], 
+ 	     subdomains$upper[9],
+ 	     stratified$upper[9])
> 
> # Length
> length <- c(mean(sketching$predictions[3,] - sketching$predictions[1,]),
+ 	    mean(subdomains$predictions[3,] - subdomains$predictions[1,]),
+ 	    mean(stratified$predictions[3,] - stratified$predictions[1,]))
> 
> # Coverage
> cvg <- c(mean(sketching$predictions[3,] > trueTest & sketching$predictions[1,] < trueTest),
+ 	 mean(subdomains$predictions[3,] > trueTest & subdomains$predictions[1,] < trueTest),
+ 	 mean(stratified$predictions[3,] > trueTest & stratified$predictions[1,] < trueTest))
> 
> # MSPE
> mspe <- c(mean((sketching$predictions[2,] - trueTest)^2), 
+ 	  mean((subdomains$predictions[2,] - trueTest)^2),
+ 	  mean((stratified$predictions[2,] - trueTest)^2))
> 
> # Final results table
> final_df <- data.frame(sigma2, sigma2Lwr, sigma2Upr, 
+ 		       tau2, tau2Lwr, tau2Upr, 
+ 		       beta, betaLwr, betaUpr, 
+ 		       mspe, cvg, length)
> rownames(final_df) <- c("sketching", "subdomains", "stratified")
> final_df
              sigma2 sigma2Lwr sigma2Upr      tau2   tau2Lwr   tau2Upr
sketching  0.6464508 0.6429320 0.6497568 0.2449921 0.2438979 0.2462086
subdomains 0.6251534 0.6226857 0.6433353 0.1666954 0.1630385 0.1675980
stratified 0.5580201 0.5554584 0.5618794 0.2261114 0.2231066 0.2278939
                 beta    betaLwr    betaUpr      mspe       cvg   length
sketching  -0.5677534 -0.5684767 -0.5670364 1.1844024 0.9296058 3.586963
subdomains -0.5599804 -0.5607086 -0.5564271 1.1945798 0.8942076 3.326142
stratified -0.7349992 -0.7355500 -0.7344435 0.8745604 0.9436846 3.382999
> 
> # Also make sure that acceptance rates are satisfactory
> sketching$acc
 sigma2    tau2 
0.25680 0.09616 
> subdomains$acc
 sigma2    tau2 
0.24132 0.20188 
> stratified$acc
 sigma2    tau2 
0.22852 0.20284 
> 
> proc.time()
   user  system elapsed 
 11.309   2.198  13.485 

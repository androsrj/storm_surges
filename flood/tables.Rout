
R version 4.2.0 (2022-04-22) -- "Vigorous Calisthenics"
Copyright (C) 2022 The R Foundation for Statistical Computing
Platform: x86_64-pc-linux-gnu (64-bit)

R is free software and comes with ABSOLUTELY NO WARRANTY.
You are welcome to redistribute it under certain conditions.
Type 'license()' or 'licence()' for distribution details.

  Natural language support but running in an English locale

R is a collaborative project with many contributors.
Type 'contributors()' for more information and
'citation()' on how to cite R or R packages in publications.

Type 'demo()' for some demos, 'help()' for on-line help, or
'help.start()' for an HTML browser interface to help.
Type 'q()' to quit R.

[Previously saved workspace restored]

> source("../other_functions/helper_functions.R")
> sketching <- readRDS("results/flood_results_sketching.RDS")
> nngp <- readRDS("results/flood_results_nngp.RDS")
> bass <- readRDS("results/flood_results_bass.RDS")
> #bart <- readRDS("results/flood_results_bart.RDS")
> indexTest <- readRDS("results/test_points.RDS")
> nTest <- length(indexTest)
> test_subjects <- 6:10
> nTestSubj <- length(test_subjects)
> load("data/flood_data.RData")
> n <- nrow(coords)
> 
> # Parameter estimates
> sigma2 <- c(sketching$means['sigma2'], 
+             sketching$lower[1],
+             sketching$upper[1])
> tau2 <- c(sketching$means['tau2'], 
+           sketching$lower[2],
+           sketching$upper[2])
> beta <- c(sketching$means['beta7'], 
+           sketching$lower[9],
+           sketching$upper[9])
> sketchParams <- data.frame(sigma2, tau2, beta)
> rownames(sketchParams) <- c("mean", "lower", "upper")
> 
> # Calculate all predictive diagnostics
> length <- cvg <- score <- mspe <- pct <- matrix(0, nrow = length(test_subjects), ncol = 3)
> for (i in 1:nTestSubj) {
+   # True values
+   trueTest <- out[test_subjects[i], indexTest]
+ 
+   # Sketching predictions for storm i
+   sketchPreds <- sketching$predictions[[i]][2, ]
+   sketchLower <- sketching$predictions[[i]][1, ]
+   sketchUpper <- sketching$predictions[[i]][3, ]
+ 
+   # BASS predictions for storm i
+   bassPreds <- bass$preds[i, ]
+   bassLower <- bass$lower[i, ]
+   bassUpper <- bass$upper[i, ]
+ 
+   # BART predictions for storm i
+   #bartPreds <- bart$preds[((i - 1) * nTest + 1):(i * nTest)]
+   #bartLower <- bart$lower[((i - 1) * nTest + 1):(i * nTest)]
+   #bartUpper <- bart$upper[((i - 1) * nTest + 1):(i * nTest)]
+   
+   # Length
+   lengthSketch <- mean(sketchUpper - sketchLower)
+   lengthNNGP <- mean(nngp$upper - nngp$lower)
+   lengthBass <- mean(bassUpper - bassLower)
+   #lengthBart <- mean(bartUpper - bartLower)
+   length[i, ] <- c(lengthSketch, lengthNNGP, lengthBass)
+ 
+   # Coverage
+   cvgSketch <- mean(sketchUpper > trueTest & sketchLower < trueTest)
+   cvgNNGP <- mean(nngp$upper > trueTest & nngp$lower < trueTest)
+   cvgBass <- mean(bassUpper > trueTest & bassLower < trueTest)
+   #cvgBart <- mean(bartUpper > trueTest & bartLower < trueTest)
+   cvg[i, ] <- c(cvgSketch, cvgNNGP, cvgBass)
+ 
+   # MSPE
+   mspeSketch <- mean((sketchPreds - trueTest)^2)
+   mspeNNGP <- mean((nngp$preds - trueTest)^2)
+   mspeBass <- mean((bassPreds - trueTest)^2)
+   #mspeBart <- mean((bartPreds - trueTest)^2)
+   mspe[i, ] <- c(mspeSketch, mspeNNGP, mspeBass)
+ 
+   # Interval score
+   a <- 0.05
+   scoreSketch <- mean( (sketchUpper - sketchLower) + 
+                  2/a * (sketchLower - trueTest) * 
+                  (trueTest < sketchLower) + 
+                  2/a * (trueTest - sketchUpper) * 
+                  (trueTest > sketchUpper) ) 
+   scoreNNGP <- mean( (nngp$upper - nngp$lower) +
+ 		   2/a * (nngp$lower - trueTest) *
+ 		   (trueTest < nngp$lower) + 
+ 		   2/a * (trueTest - nngp$upper) * 
+ 		   (trueTest > nngp$upper) )
+   scoreBass <- mean( (bassUpper - bassLower) +
+ 		   2/a * (bassLower - trueTest) *
+ 		   (trueTest < bassLower) + 
+ 		   2/a * (trueTest - bassUpper) *
+ 		   (trueTest > bassUpper) )
+   #scoreBart <- mean( (bartUpper - bartLower) +
+   #		   2/a * (bartLower - trueTest) *
+   #		   (trueTest < bartLower) + 
+   #		   2/a * (trueTest - bartUpper) * 
+   #		   (trueTest > bartUpper) )
+   score[i, ] <- c(scoreSketch, scoreNNGP, scoreBass)
+ 
+   # Over/under 4 feet
+   trueFeet <- trueTest * 3.28084
+   trueOver <- trueFeet >= 4.0
+ 
+   sketchFeet <- sketchPreds * 3.28084
+   sketchOver <- sketchFeet >= 4.0
+   sketchPct <- mean(trueOver == sketchOver)
+ 
+   nngpFeet <- nngp$preds * 3.28084
+   nngpOver <- nngpFeet >= 4.0
+   nngpPct <- mean(trueOver == nngpOver)
+ 
+   bassFeet <- bassPreds * 3.28084
+   bassOver <- bassFeet >= 4.0
+   bassPct <- mean(trueOver == bassOver)
+   
+   #bartFeet <- bartPreds * 3.28084
+   #bartOver <- bartFeet >= 4.0
+   #bartPct <- mean(trueOver == bartOver)
+ 
+   pct[i, ] <- c(sketchPct, nngpPct, bassPct)
+ }
> 
> length <- apply(length, 2, mean)
> cvg <- apply(cvg, 2, mean)
> mspe <- apply(mspe, 2, mean)
> crps <- c(sketching$crps, nngp$crps, bass$crps)
> score <- apply(score, 2, mean)
> pct <- 1 - apply(pct, 2, mean)
> 
> # Parameter estimates
> 
> sketchParams
         sigma2       tau2       beta
mean  0.6850227 0.08406825 -0.7193306
lower 0.6636887 0.05654706 -0.7207855
upper 0.7137268 0.10444747 -0.7178103
> nngp$params
       sigma.sq     tau.sq       phi       beta
mean  0.5764774 0.02795474  752.0608 -0.3235838
lower 0.4663376 0.01017645  339.3973 -0.4019445
upper 0.6921039 0.09930038 3630.3445 -0.2164336
> crps
[1] 0.8982107 0.7429007
> sketching$crps
NULL
> nngp$crps
[1] 0.8982107
> bass$crps
[1] 0.7429007
> 
> # Predictive diagnostics 
> preds_df <- data.frame(mspe = mspe,
+ 		       crps = crps,
+ 		       cvg = cvg, 
+ 		       score = score, 
+ 		       pct = pct)
Error in data.frame(mspe = mspe, crps = crps, cvg = cvg, score = score,  : 
  arguments imply differing number of rows: 3, 2
Execution halted
